---
- hosts: vagrant
  remote_user: vagrant

  tasks:
    - name: Install MySQL client, server and dependencies
      apt: pkg={{ item }} state=latest update_cache=yes
      with_items:
        - mysql-client
        - mysql-server
        - python-mysqldb
      become: true

    - name: Install PHP and dependencies
      apt: pkg={{ item }} state=latest
      with_items:
        - php5
        - php5-cli
        - php5-curl
        - php5-gd
        - php5-imagick
        - php5-mysql
        - php5-xmlrpc
        - php5-xdebug
      become: true

    - name: Install Apache and its modules
      apt: pkg={{ item }} state=latest
      with_items:
        - apache2
        - libapache2-mod-php5
      become: true

    - name: Activate mod_rewrite
      apache2_module:
        name: rewrite
        state: present
      become: true

    - name: Start MySQL service
      service:
        name: "mysql"
        state: started
        enabled: yes
      become: true

    - name: Setup MySQL root password
      mysql_user:
        name: "root"
        password: "mysql"
        host: "{{ item }}"
        state: present
      with_items:
        - "{{ ansible_hostname }}"
        - 127.0.0.1
        - ::1
        - localhost
      become: true

    - name: Setup MySQL creds for root user
      template:
        src: "{{ mysqlTemplatePath }}"
        dest: "/root/.my.cnf"
        owner: "root"
        mode: 0600
      become: true

    - name: Delete blank MySQL users
      mysql_user:
        name: ""
        host: "{{ item }}"
        state: absent
      with_items:
        - "{{ ansible_hostname }}"
        - 127.0.0.1
        - ::1
        - localhost
      become: true

    - name: Drop MySQL test database
      mysql_db:
        name: test
        state: absent
      become: true

    - name: Drop MySQL WordPress database
      mysql_db:
        name: wordpress
        state: absent
      become: true

    - name: Setup empty database for WordPress
      mysql_db:
        name: "wordpress"
        encoding: "utf8"
        collation: "utf8_unicode_ci"
        state: "present"
        login_user: "root"
        login_password: "mysql"
      become: true

    - name: Setup MySQL user for WordPress
      mysql_user:
        name: "user_wp"
        password: "wordpress"
        host: "localhost"
        priv: "wordpress.*:ALL"
        state: "present"
      become: true

    - name: Put "vagrant" user in www-data group
      user:
        name: "vagrant"
        groups: "www-data"
        append: yes
      become: true

    - name: Set up XDebug for remote debugging
      template:
        src: "{{ xdebugTemplatePath }}"
        dest: /etc/php5/apache2/conf.d/xdebug-remote-debugging.ini
      become: true

    - name: Set app path
      shell: dirname "{{ inventory_dir }}"
      register: app_path

    - name: Copy app
      synchronize:
        src: "{{ app_path.stdout }}"
        dest: /vagrant/
        recursive: yes
        use_ssh_args: yes

    - name: Symlink web root to app
      file:
        src: "/vagrant/kffp-website"
        dest: "/var/www/kffp-website"
        state: "link"
      become: true

    - name: Check whether DB backup exists
      local_action: stat path="{{ app_path.stdout }}/backup.sql"
      register: db_backup

    - name: Copy DB backup
      copy: src="{{ app_path.stdout }}/backup.sql" dest=/tmp
      when: db_backup.stat.exists

    - name: Import backup DB
      mysql_db:
        state: import
        target: /tmp/backup.sql
        login_user: root
        login_password: mysql
        name: wordpress
      when: db_backup.stat.exists

    - name: Copy virtual host setup over
      template:
        src: "{{ vhostTemplatePath }}"
        dest: /etc/apache2/sites-available/
      become: true

    - name: Activate virtual host
      command: a2ensite vhost
      become: true

    - name: Deactivate default vhost
      command: a2dissite 000-default
      become: true

    - name: Remove DB backup file
      file:
        path: "/vagrant/kffp-website/backup.sql"
        state: absent
      become: true

    - name: Remove the backup from the tmp directory
      file:
        path: "/tmp/backup.sql"
        state: absent
      become: true

    # Also remove the /tmp directory


    - name: Restart Apache
      service:
        name: apache2
        state: restarted
        enabled: yes
      become: true
